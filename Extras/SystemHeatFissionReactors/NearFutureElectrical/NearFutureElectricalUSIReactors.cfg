// Near Future Electrical USI Reactors compatibility
// Changes USI reactors to behave like NFE reactors
@PART[USI_Nuke_625]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 0.25 
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
	MODULE
	{
		name = ModuleUpdateOverride
	}
	
	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor
 
		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
		  key = 0 0 0 0 
		  key = 100 136 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 750
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.005
		
		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 25

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
		  key = 0 0
		  key = 100 36
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
		  ResourceName = EnrichedUranium
		  Ratio = 0.000000126785
		  FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
		  ResourceName = DepletedFuel
		  Ratio = 0.000000126785
		  DumpExcess = false
		  FlowMode = NO_FLOW
		}

		EngineerLevelForRepair = 5
		MaxRepairPercent = 75
		MaxTempForRepair = 330
	}
	
	  MODULE
	  {
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	  }
}

@PART[USI_Nuke_125_S]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 0.5
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
  
	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
		  key = 0 0 0 0 
		  key = 100 325 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 775
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01
		
		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 20

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
		  key = 0 0
		  key = 100 100
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
		  ResourceName = EnrichedUranium
		  Ratio = 0.00000034414
		  FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
		  ResourceName = DepletedFuel
		  Ratio = 0.00000034414
		  DumpExcess = false
		  FlowMode = NO_FLOW
		}
	}
	
	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[USI_Nuke_125]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 1
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}
  
	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
		  key = 0 0 0 0 
		  key = 100 650 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 800
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01
		
		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 20

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
		  key = 0 0
		  key = 100 200
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
		  ResourceName = EnrichedUranium
		  Ratio = 0.00000065205
		  FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
		  ResourceName = DepletedFuel
		  Ratio = 0.00000065205
		  DumpExcess = false
		  FlowMode = NO_FLOW
		}
	}
	
	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[USI_Nuke_250]:FOR[SystemHeatFissionReactors]
{ 
	MODULE
	{
		name = ModuleSystemHeat
		volume = 2
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}


	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 2900 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 850
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 15

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 1000
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0000027169
			FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.0000027169
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}
	MODULE
	{
	name = ModuleSystemHeatFissionFuelContainer
	EngineerLevelForTransfer = 3
	ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[USI_Nuke_375]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 4
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 9000 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 900
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.01

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 10

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 4000
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.000010143
			FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.000010143
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[FTT_Service_375_01]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 4
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 8000 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 900
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.005

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 10

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 4500
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0000089658
			FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.0000089658
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[FTT_Reactor_500_01]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 8
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 16000 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 950
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.005

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 10

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 8000
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.0000190184
			FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.0000190184
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[Duna_PDU]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 2
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 3250 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 750
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.005

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 15

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 750
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000326
			FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000326
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}

@PART[Tundra_PDU]:FOR[SystemHeatFissionReactors]
{
	MODULE
	{
		name = ModuleSystemHeat
		volume = 4
		moduleID = reactor
		iconName = Icon_Nuclear
	}

	!MODULE[ModuleUpdateOverride] {}
	!MODULE[FissionReactor] {}
	!MODULE[FissionGenerator] {}
	!MODULE[ModuleCoreHeatNoCatchup] {}
	!MODULE[RadioactiveStorageContainer] {}

	MODULE
	{
		name = ModuleSystemHeatFissionReactor
		moduleID = reactor

		// -- Heat stuff
		// ModuleSystemHeat instance to link to
		systemHeatModuleID = reactor
		
		// Heat kW
		HeatGeneration
		{
			key = 0 0 0 0 
			key = 100 4700 0 0 
		} 
		
		// Above this temp, risky
		NominalTemperature = 900
		
		// Above this temp, reactor takes damage
		CriticalTemperature = 1300
		
		// Amount of damage taken by core when over critical temp
		// %/s/K, so with value 0.001, at 200 K over CriticalTemp, reactor takes 0.2% damage/s
		CoreDamageRate = 0.005

		// When repairing, amount of core damage to heal (%)
		RepairAmountPerKit  = 10

		CurrentPowerPercent = 100
		ThrottleIncreaseRate = 5
		MinimumThrottle = 25

		// -- Electrical stuff
		// Power generated
		ElectricalGeneration
		{
			key = 0 0
			key = 100 1200
		}

		// --- Fuel stuff
		// Base lifetime calculations off this resource
		FuelName = EnrichedUranium

		INPUT_RESOURCE
		{
			ResourceName = EnrichedUranium
			Ratio = 0.00000652
			FlowMode = NO_FLOW
		}
		
		OUTPUT_RESOURCE
		{
			ResourceName = DepletedFuel
			Ratio = 0.00000652
			DumpExcess = false
			FlowMode = NO_FLOW
		}
	}

	MODULE
	{
		name = ModuleSystemHeatFissionFuelContainer
		EngineerLevelForTransfer = 3
		ResourceNames = EnrichedUranium, DepletedFuel
	}
}
